version: 2.1

executors:
  my-executor:
    docker:
      - image: circleci/openjdk:8u181
    working_directory: ~/repo

jobs:
  deploy-to-dev:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Install awscli
          command: |
            sudo apt-get install python-setuptools
            sudo easy_install pip
            sudo pip install awsebcli --upgrade
      - run:
          name: Build the project and run tests
          command: |
            ./gradlew build
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config

  confirm-production-deployment:
    executor: my-executor
    steps:
      - run:
          name: Confirm proudction deployment
          command: |
            echo "Production deployment approved"

  deploy-to-production:
    executor: my-executor
    steps:
      - checkout
      - run:
          name: Install awscli
          command: |
            sudo apt-get install python-setuptools
            sudo easy_install pip
            sudo pip install awsebcli --upgrade
      - run:
          name: Build the project and run tests
          command: |
            ./gradlew build
      - run:
          name: Create AWS credentials manually
          command: |
            mkdir ~/.aws
            touch ~/.aws/config
            chmod 600 ~/.aws/config
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config

workflows:
  version: 2
  build-deploy:
    jobs:
      - deploy-to-dev:
          filters:
            branches:
              only:
                - master
      - confirm-production-deployment:
          type: approval
          requires:
            - deploy-to-dev
      - deploy-to-production:
          requires:
            - confirm-production-deployment
          filters:
            branches:
              only:
                - master